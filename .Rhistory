#################################################################
# PHASE 1, STEP 1.1: PROFESSIONAL DATA PREPROCESSING
# Objective: Transform raw hospital data into a clean, analysis-ready dataset.
#################################################################
# --- 1. SETUP ---
# install.packages("tidyverse")
# install.packages("janitor")
setwd("/home/wayne/Projects/Data Analytics/EHR")
# Load libraries
library(tidyverse)
library(janitor)
library(DBI)
library(RMySQL)
# --- 2. LOAD & CLEAN NAMES ---
# Load the raw data using read_csv for better performance and type inference
raw_df <- read.csv("Unplanned_Hospital_Visits-Hospital.csv")
# Use janitor to create clean, database-friendly column names
df <- clean_names(raw_df)
# --- 3. CORE TRANSFORMATION PIPELINE ---
processed_df <- df %>%
mutate(
# Convert key metric columns to numeric. as.numeric will smartly handle text like "Not Available" by converting it to NA.
denominator = as.numeric(denominator),
score = as.numeric(score),
lower_estimate = as.numeric(lower_estimate),
higher_estimate = as.numeric(higher_estimate),
# Clean patient count columns by specifically replacing "Not Applicable" with NA, then converting to integer.
number_of_patients = na_if(number_of_patients, "Not Applicable") %>% as.integer(),
number_of_patients_returned = na_if(number_of_patients_returned, "Not Applicable") %>% as.integer(),
# Parse character dates into proper R date objects using the mdy (month-day-year) function.
start_date = mdy(start_date),
end_date = mdy(end_date),
# Preserve leading zeros in ZIP codes by converting to character and padding to 5 digits.
zip_code = as.character(zip_code) %>% str_pad(width = 5, side = "left", pad = "0"),
# Standardize the 'compared_to_national' column into a new, clean 'performance_category' column for easier analysis.
performance_category = case_when(
str_detect(compared_to_national, "No Different") ~ "Average",
str_detect(compared_to_national, "Better") ~ "Better than National Average",
str_detect(compared_to_national, "Worse") ~ "Worse than National Average",
TRUE ~ NA_character_ # All other cases become NA
)
)
# Get a summary of the key numeric columns in your new data frame
summary(processed_df %>% select(score, denominator, number_of_patients))
# --- 4. VALIDATION ---
# Glimpse the final data structure to confirm all type conversions were successful.
print("--- Final Data Structure ---")
glimpse(processed_df)
# Check the new clean category
print("--- Cleaned Performance Categories ---")
print(table(processed_df$performance_category, useNA = "ifany"))
# Convert start_date to "day/month/year"
processed_df$start_date <- format(processed_df$start_date, "%d/%m/%Y")
# Convert end_date to "day/month/year"
processed_df$end_date <- format(processed_df$end_date, "%d/%m/%Y")
head(raw_counts_df[1:10, 1:10])
head(processed_df[1:10, 1:10])
